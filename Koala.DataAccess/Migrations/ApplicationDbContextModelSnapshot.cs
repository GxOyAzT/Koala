// <auto-generated />
using System;
using Koala.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Koala.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Koala.Entities.Models.ContactModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.GradeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Grade")
                        .HasColumnType("float");

                    b.Property<Guid>("GradeTitleModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GradeTitleModelId");

                    b.HasIndex("StudentModelId");

                    b.ToTable("GradeModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.GradeTitleModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubjectGroupTeacherModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SubjectGroupTeacherModelId");

                    b.ToTable("GradeTitleModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.GroupModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SemesterModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SemesterModelId");

                    b.ToTable("GroupModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.GroupStudentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupModelId");

                    b.HasIndex("StudentModelId");

                    b.ToTable("GroupStudentModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.PersonModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.PrincipalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContactModelId");

                    b.HasIndex("PersonModelId");

                    b.ToTable("PrincipalModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.SemesterModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SemesterModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.StudentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContactModelId");

                    b.HasIndex("PersonModelId");

                    b.ToTable("StudentModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.SubjectGroupModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupModelId");

                    b.HasIndex("SubjectModelId");

                    b.ToTable("SubjectGroupModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.SubjectGroupTeacherModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectGroupModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeacherModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SubjectGroupModelId");

                    b.HasIndex("TeacherModelId");

                    b.ToTable("SubjectGroupTeacherModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.SubjectModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubjectModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.TeacherModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContactModelId");

                    b.HasIndex("PersonModelId");

                    b.ToTable("TeacherModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.GradeModel", b =>
                {
                    b.HasOne("Koala.Entities.Models.GradeTitleModel", "GradeTitleModel")
                        .WithMany("GradeModels")
                        .HasForeignKey("GradeTitleModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Koala.Entities.Models.StudentModel", "StudentModel")
                        .WithMany("GradeModels")
                        .HasForeignKey("StudentModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GradeTitleModel");

                    b.Navigation("StudentModel");
                });

            modelBuilder.Entity("Koala.Entities.Models.GradeTitleModel", b =>
                {
                    b.HasOne("Koala.Entities.Models.SubjectGroupTeacherModel", "SubjectGroupTeacherModel")
                        .WithMany("GradeTitleModels")
                        .HasForeignKey("SubjectGroupTeacherModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubjectGroupTeacherModel");
                });

            modelBuilder.Entity("Koala.Entities.Models.GroupModel", b =>
                {
                    b.HasOne("Koala.Entities.Models.SemesterModel", "SemesterModel")
                        .WithMany("GroupModels")
                        .HasForeignKey("SemesterModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SemesterModel");
                });

            modelBuilder.Entity("Koala.Entities.Models.GroupStudentModel", b =>
                {
                    b.HasOne("Koala.Entities.Models.GroupModel", "GroupModel")
                        .WithMany("GroupStudentModels")
                        .HasForeignKey("GroupModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Koala.Entities.Models.StudentModel", "StudentModel")
                        .WithMany("GroupStudentModels")
                        .HasForeignKey("StudentModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupModel");

                    b.Navigation("StudentModel");
                });

            modelBuilder.Entity("Koala.Entities.Models.PrincipalModel", b =>
                {
                    b.HasOne("Koala.Entities.Models.ContactModel", "ContactModel")
                        .WithMany()
                        .HasForeignKey("ContactModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Koala.Entities.Models.PersonModel", "PersonModel")
                        .WithMany()
                        .HasForeignKey("PersonModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactModel");

                    b.Navigation("PersonModel");
                });

            modelBuilder.Entity("Koala.Entities.Models.StudentModel", b =>
                {
                    b.HasOne("Koala.Entities.Models.ContactModel", "ContactModel")
                        .WithMany()
                        .HasForeignKey("ContactModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Koala.Entities.Models.PersonModel", "PersonModel")
                        .WithMany()
                        .HasForeignKey("PersonModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactModel");

                    b.Navigation("PersonModel");
                });

            modelBuilder.Entity("Koala.Entities.Models.SubjectGroupModel", b =>
                {
                    b.HasOne("Koala.Entities.Models.GroupModel", "GroupModel")
                        .WithMany("SubjectGroupModels")
                        .HasForeignKey("GroupModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Koala.Entities.Models.SubjectModel", "SubjectModel")
                        .WithMany("SubjectGroupModels")
                        .HasForeignKey("SubjectModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupModel");

                    b.Navigation("SubjectModel");
                });

            modelBuilder.Entity("Koala.Entities.Models.SubjectGroupTeacherModel", b =>
                {
                    b.HasOne("Koala.Entities.Models.SubjectGroupModel", "SubjectGroupModel")
                        .WithMany("SubjectGroupTeacherModels")
                        .HasForeignKey("SubjectGroupModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Koala.Entities.Models.TeacherModel", "TeacherModel")
                        .WithMany("SubjectGroupTeacherModels")
                        .HasForeignKey("TeacherModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubjectGroupModel");

                    b.Navigation("TeacherModel");
                });

            modelBuilder.Entity("Koala.Entities.Models.TeacherModel", b =>
                {
                    b.HasOne("Koala.Entities.Models.ContactModel", "ContactModel")
                        .WithMany()
                        .HasForeignKey("ContactModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Koala.Entities.Models.PersonModel", "PersonModel")
                        .WithMany()
                        .HasForeignKey("PersonModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactModel");

                    b.Navigation("PersonModel");
                });

            modelBuilder.Entity("Koala.Entities.Models.GradeTitleModel", b =>
                {
                    b.Navigation("GradeModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.GroupModel", b =>
                {
                    b.Navigation("GroupStudentModels");

                    b.Navigation("SubjectGroupModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.SemesterModel", b =>
                {
                    b.Navigation("GroupModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.StudentModel", b =>
                {
                    b.Navigation("GradeModels");

                    b.Navigation("GroupStudentModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.SubjectGroupModel", b =>
                {
                    b.Navigation("SubjectGroupTeacherModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.SubjectGroupTeacherModel", b =>
                {
                    b.Navigation("GradeTitleModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.SubjectModel", b =>
                {
                    b.Navigation("SubjectGroupModels");
                });

            modelBuilder.Entity("Koala.Entities.Models.TeacherModel", b =>
                {
                    b.Navigation("SubjectGroupTeacherModels");
                });
#pragma warning restore 612, 618
        }
    }
}
